// <auto-generated />
using DesafioBookStore_Back.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesafioBookStore_Back.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241202094154_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesafioBookStore_Back.Domain.Entities.Assunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CodAs")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Assunto");
                });

            modelBuilder.Entity("DesafioBookStore_Back.Domain.Entities.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CodAu")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("DesafioBookStore_Back.Domain.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Codi")
                        .HasColumnType("integer");

                    b.Property<int>("Edicao")
                        .HasColumnType("integer");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("LivroAssunto", b =>
                {
                    b.Property<int>("AssuntoCodAs")
                        .HasColumnType("integer");

                    b.Property<int>("LivroCod")
                        .HasColumnType("integer");

                    b.HasKey("AssuntoCodAs", "LivroCod");

                    b.HasIndex("LivroCod");

                    b.ToTable("LivroAssunto");
                });

            modelBuilder.Entity("LivroAutor", b =>
                {
                    b.Property<int>("AutorCodAu")
                        .HasColumnType("integer");

                    b.Property<int>("LivroCod")
                        .HasColumnType("integer");

                    b.HasKey("AutorCodAu", "LivroCod");

                    b.HasIndex("LivroCod");

                    b.ToTable("LivroAutor");
                });

            modelBuilder.Entity("LivroAssunto", b =>
                {
                    b.HasOne("DesafioBookStore_Back.Domain.Entities.Assunto", null)
                        .WithMany()
                        .HasForeignKey("AssuntoCodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioBookStore_Back.Domain.Entities.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivroCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LivroAutor", b =>
                {
                    b.HasOne("DesafioBookStore_Back.Domain.Entities.Autor", null)
                        .WithMany()
                        .HasForeignKey("AutorCodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesafioBookStore_Back.Domain.Entities.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivroCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
